




  0%|                                                                                                                                              | 10/11570 [00:11<2:21:11,  1.36it/s]



  0%|▏                                                                                                                                             | 19/11570 [00:17<2:11:23,  1.47it/s]




  0%|▍                                                                                                                                             | 31/11570 [00:25<2:11:23,  1.46it/s]



  0%|▍                                                                                                                                             | 39/11570 [00:30<2:13:19,  1.44it/s]



  0%|▌                                                                                                                                             | 48/11570 [00:37<2:11:26,  1.46it/s]




  1%|▋                                                                                                                                             | 60/11570 [00:45<2:09:50,  1.48it/s]



  1%|▊                                                                                                                                             | 69/11570 [00:51<2:08:42,  1.49it/s]



  1%|▉                                                                                                                                             | 78/11570 [00:57<2:09:11,  1.48it/s]




  1%|█                                                                                                                                             | 90/11570 [01:05<2:06:17,  1.51it/s]



  1%|█▏                                                                                                                                            | 99/11570 [01:11<2:09:00,  1.48it/s]




  1%|█▎                                                                                                                                           | 111/11570 [01:19<2:10:08,  1.47it/s]



  1%|█▍                                                                                                                                           | 120/11570 [01:25<2:07:28,  1.50it/s]



  1%|█▌                                                                                                                                           | 128/11570 [01:31<2:08:49,  1.48it/s]




  1%|█▋                                                                                                                                           | 140/11570 [01:39<2:08:24,  1.48it/s]
  1%|█▋                                                                                                                                           | 141/11570 [01:39<2:07:46,  1.49it/s]Traceback (most recent call last):
  File "/data1/aman/programs/MediSOAP/train_phi2.py", line 108, in <module>
    trainer.train()
  File "/data1/aman/miniconda3/part/lib/python3.11/site-packages/trl/trainer/sft_trainer.py", line 440, in train
    output = super().train(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data1/aman/miniconda3/part/lib/python3.11/site-packages/transformers/trainer.py", line 1780, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "/data1/aman/miniconda3/part/lib/python3.11/site-packages/transformers/trainer.py", line 2118, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data1/aman/miniconda3/part/lib/python3.11/site-packages/transformers/trainer.py", line 3045, in training_step
    self.accelerator.backward(loss)
  File "/data1/aman/miniconda3/part/lib/python3.11/site-packages/accelerate/accelerator.py", line 2013, in backward
    loss.backward(**kwargs)
  File "/data1/aman/miniconda3/part/lib/python3.11/site-packages/torch/_tensor.py", line 522, in backward
    torch.autograd.backward(
  File "/data1/aman/miniconda3/part/lib/python3.11/site-packages/torch/autograd/__init__.py", line 266, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt